---
name: "Terraform Project: Generate Plan"

"on":
  workflow_call:
    secrets:
      GH_TOKEN:
        description: "Github PAT. Used for managing Github ressources beyond the scope of short-live token (organization, other repositories, etc)"
        required: false
      TFE_TOKEN:
        description: "Terraform Cloud Token. Used for backend's authentication and ressource management"
        required: false

permissions: {}

jobs:
  terraform:
    name: "Terraform Project"
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.repository }}
      cancel-in-progress: false
    steps:
      - id: repo_checkout
        name: "Repository: Checkout"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          persist-credentials: false
      - id: tf_version
        name: "Terraform: Get version"
        run: |
          TF_VERSION=$(cat .terraform-version 2>/dev/null || echo latest)
          echo "TF_VERSION=$TF_VERSION" >> $GITHUB_OUTPUT
      - id: tf_setup
        name: "Terraform: Setup"
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd  # v3.1.2
        with:
          cli_config_credentials_token: ${{ secrets.TFE_TOKEN }}
          terraform_version: ${{steps.tf_version.outputs.TF_VERSION}}
      - id: tf_fmt
        name: "Terraform: Check formatting"
        run: terraform fmt -check -diff -recursive ./
      - name: "Terraform: Cache providers directory"
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809  # v4.2.4
        with:
          path: ./.terraform/providers
          key: tf-${{ steps.tf_version.outputs.TF_VERSION }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.terraform.lock.hcl') }}
      - id: tf_init
        name: "Terraform: Prepare working directory"
        run: terraform init
      - id: tf_validate
        name: "Terraform: Check configuration is valid"
        run: terraform validate
      - id: tf_plan
        name: "Terraform: Generate terraform plan"
        run: terraform plan -input=false -no-color
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  tflint:
    name: "Project linting"
    runs-on: ubuntu-latest
    steps:
      - id: repo_checkout
        name: "Repository: Checkout"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          persist-credentials: false
      - id: tflint_cache
        name: "TFLint: Update cache"
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809  # v4.2.4
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}
      - id: tflint_setup
        name: "TFLint: Setup"
        uses: terraform-linters/setup-tflint@90f302c255ef959cbfb4bd10581afecdb7ece3e6  # v4.1.1
      - id: tflint_init
        name: "TFLint: Install plugins"
        run: tflint --init
      - id: tflint_inspect
        name: "TFLint: Inspect code"
        run: tflint -f compact --call-module-type=local
